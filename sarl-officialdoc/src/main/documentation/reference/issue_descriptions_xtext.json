[
	{
		"code": "org.eclipse.xtext.diagnostics.Diagnostic.Linking",
		"message": "*name* cannot be resolved to a type",
		"cause": "You have specified a type *name* into your code, e.g. `typeof(MyType)`. But, no type declaration was found for *name* into the current compilation scope",
		"solution": "Replace *name* by an appropriate type name; or Add the type *name* into the compilation scope, by using an `import` statement for example",
		"level": "error"
	},
	{
		"code": "org.eclipse.xtext.diagnostics.Diagnostic.Linking",
		"message": "The method *func-prototype* is undefined",
		"cause": "You have specified a function call to *func-prototype* into your code, e.g. `myfct()`. But, no method declaration was found for *func-prototype* into the current compilation scope",
		"solution": "Replace *func-prototype* by an appropriate function call; or Add the method into the compilation scope, by using an `import` statement for example",
		"level": "error"
	},
	{
		"code": "org.eclipse.xtext.diagnostics.Diagnostic.Linking",
		"message": "The method or field *name* is undefined",
		"cause": "You have specified a function call to *name*, or a reference to the field *name*, into your code. But, neither a method declaration nor a field declaration was found into the current compilation scope",
		"solution": "Replace *name* by an appropriate function call or field reference; or Add the method/field into the compilation scope, by using an `import` statement for example",
		"level": "error"
	},
	{
		"code": "org.eclipse.xtext.diagnostics.Diagnostic.Linking",
		"message": "The method *func-prototype* is undefined for the type *type-name*",
		"cause": "You have specified a function call to *func-prototype* into your code, e.g. `myfct()`. But, no method declaration was found for *func-prototype* into the current compilation scope",
		"solution": "Replace *func-prototype* by an appropriate function call; or Add the method into the compilation scope, by using an `import` statement for example",
		"level": "error"
	},
	{
		"code": "org.eclipse.xtext.diagnostics.Diagnostic.Linking",
		"message": "The method or field *name* is undefined for the type *type-name*",
		"cause": "You have specified a function call to *name*, or a reference to the field *name*, into your code. But, neither a method declaration nor a field declaration was found into the current compilation scope",
		"solution": "Replace *name* by an appropriate function call or field reference; or Add the method/field into the compilation scope, by using an `import` statement for example",
		"level": "error"
	},
	{
		"code": "org.eclipse.xtext.diagnostics.Diagnostic.Linking",
		"message": "Couldn't resolve reference to *name*",
		"cause": "You have written a reference to a feature that cannot be found from the current compilation scope. Since, it cannot be found, SARL compiler cannot determine the concrete type of the feature",
		"solution": "Replace *name* by an appropriate feature; or Add the feature into the compilation scope, by using an `import` statement for example",
		"level": "error"
	},
	{
		"code": "org.eclipse.xtext.diagnostics.Diagnostic.Syntax",
		"message": "*any-message*",
		"cause": "This error is generated when your SARL code has an improper syntax, and cannot be parsed by the SARL compiler. The error message provides the detail of the invalid syntax",
		"level": "error"
	},
	{
		"code": "org.eclipse.xtext.diagnostics.Diagnostic.Syntax&dot;Range",
		"message": "*any-message*",
		"cause": "This error is generated when your SARL code has an improper syntax, and cannot be parsed by the SARL compiler. The error message provides the detail of the invalid syntax and the position into your source code that is under failure",
		"level": "error"
	},
	{
		"code": "org.eclipse.xtext.builder.copyJavaProblems",
		"message": "*any-message*",
		"cause": "Sometime, the Java code that is generated by the SARL compiler may contain compilation errors from the Java compiler point of view. This error code enables the SARL validator to forward the errors that were found into the Java code to be automatically attached to the SARL statement that is the source of the failing Java code",
		"solution": "Contact the SARL development team",
		"level": "c/error"
	}
]


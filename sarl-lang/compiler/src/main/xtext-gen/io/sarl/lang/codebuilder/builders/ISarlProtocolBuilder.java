/*
 * $Id$
 *
 * File is automatically generated by the Xtext language generator.
 * Do not change it.
 *
 * SARL is an general-purpose agent programming language.
 * More details on http://www.sarl.io
 *
 * Copyright (C) 2014-2024 SARL.io, the Original Authors and Main Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.sarl.lang.codebuilder.builders;

import io.sarl.lang.sarl.SarlProtocol;
import io.sarl.lang.sarl.SarlScript;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.common.types.JvmDeclaredType;
import org.eclipse.xtext.common.types.JvmParameterizedTypeReference;
import org.eclipse.xtext.common.types.JvmType;
import org.eclipse.xtext.common.types.JvmTypeReference;
import org.eclipse.xtext.common.types.access.IJvmTypeProvider;
import org.eclipse.xtext.xbase.lib.Pure;

/** Builder of a Sarl SarlProtocol.
	 * @see TopElementBuilderFragment.java : appendTo : 301
 */
@SuppressWarnings("all")
public interface ISarlProtocolBuilder {

	/** Find the reference to the type with the given name.
	 * @param typeName the fully qualified name of the type
	 * @return the type reference.
	 * @see TopElementBuilderFragment.java : appendTo : 1143
	 */
	JvmTypeReference newTypeRef(String typeName);

	/** Find the reference to the type with the given name.
	 * @param context the context for the type reference use
	 * @param typeName the fully qualified name of the type
	 * @return the type reference.
	 * @see TopElementBuilderFragment.java : appendTo : 1171
	 */
	JvmTypeReference newTypeRef(Notifier context, String typeName);

	/** Find the reference to the type with the given type parameters.
	 * @param type the type to reference
	 * @param args the type parameters to add to the to reference to the given type
	 * @return the type reference.
	 * @see TopElementBuilderFragment.java : appendTo : 1201
	 */
	JvmTypeReference newTypeRef(JvmType type, JvmTypeReference... args);

	/** Find the reference to the type with the given type parameters.
	 * @param type the type to reference
	 * @param args the type parameters to add to the to reference to the given type
	 * @return the type reference.
	 * @see TopElementBuilderFragment.java : appendTo : 1233
	 */
	JvmTypeReference newTypeRef(Class type, JvmTypeReference... args);

	/** Find the reference to the type with the given type parameters.
	 * @param context the context in which the type is defined
	 * @param type the type to reference
	 * @param args the type parameters to add to the to reference to the given type
	 * @return the type reference.
	 * @see TopElementBuilderFragment.java : appendTo : 1267
	 */
	JvmTypeReference newTypeRef(Notifier context, Class type, JvmTypeReference... args);

	/** Replies the context for type resolution.
	 * @return the context or {@code null} if the Ecore object is the context.
	 * @see TopElementBuilderFragment.java : appendTo : 1299
	 */
	IJvmTypeProvider getTypeResolutionContext();

	/** Dispose the resource.
	 * @see TopElementBuilderFragment.java : appendTo : 1321
	 */
	void dispose();

	/** Initialize the Ecore element when inside a script.
	 * @param script the SARL script in which this SarlProtocol is added.
	 * @param name the simple name of the SarlProtocol.
	 * @param context the context in which the resolution of types must be done.
	 * @see TopElementBuilderFragment.java : appendTo : 1379
	 */
	void eInit(SarlScript script, String name, IJvmTypeProvider context);

	/** Replies the generated SarlProtocol.
	 * @see TopElementBuilderFragment.java : appendTo : 1515
	 */
	@Pure
	SarlProtocol getSarlProtocol();

	/** Replies the reference to the generated SarlAgent.
	 * @since 0.15
	 * @see TopElementBuilderFragment.java : appendTo : 1555
	 */
	@Pure
	public JvmTypeReference getSarlProtocolReference();

	/** Replies the JVM declared type for this generated SarlProtocol.
	 * @return the type, never {@code null}.
	 * @since 0.15
	 * @see TopElementBuilderFragment.java : appendTo : 1610
	 */
	@Pure
	JvmDeclaredType getJvmDeclaredType();

	/** Replies the resource to which the SarlProtocol is attached.
	 * @see TopElementBuilderFragment.java : appendTo : 1645
	 */
	@Pure
	Resource eResource();

	/** Change the documentation of the element.
	 *
	 * <p>The documentation will be displayed just before the element.
	 *
	 * @param doc the documentation.
	 * @return {@code this}.
	 * @see AbstractSubCodeBuilderFragment.java : appendTo : 602
	 */
	ISarlProtocolBuilder setDocumentation(String doc);

	/** Add a modifier.
	 * @param modifier the modifier to add.
	 * @return {@code this}.
	 * @see TopElementBuilderFragment.java : appendTo : 2209
	 */
	ISarlProtocolBuilder addModifier(String modifier);

	/** Create a SarlProtocolParameter.
	 * @param name the name of the SarlProtocolParameter.
	 * @return the builder.
	 * @see TopElementBuilderFragment.java : appendTo : 540
	 */
	ISarlProtocolParameterBuilder addSarlProtocolParameter(String name);

	/** Create a SarlProtocolCall.
	 * @param name the type of the SarlProtocolCall.
	 * @return the builder.
	 * @see TopElementBuilderFragment.java : appendTo : 540
	 */
	ISarlProtocolCallBuilder addSarlProtocolCall(String name);

	/** Create a SarlProtocolCall.
	 * @param name the type of the SarlProtocolCall.
	 * @return the builder.
	 * @see TopElementBuilderFragment.java : appendTo : 602
	 */
	ISarlProtocolCallBuilder addSarlProtocolCall(JvmParameterizedTypeReference name);

	/** Create a SarlProtocolMessage.
	 * @param name the name of the SarlProtocolMessage.
	 * @return the builder.
	 * @see TopElementBuilderFragment.java : appendTo : 540
	 */
	ISarlProtocolMessageBuilder addSarlProtocolMessage(String name);

}

